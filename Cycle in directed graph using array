bool dfs(int u,vector<int>adj[],int vis[],int st[]){
    if(vis[u])
    return false;
    vis[u]=true;
    for(auto v:adj[u]){
        if(st[v])
        return true;
        else
        {
            st[v]=true;
            bool ch=dfs(v,adj,vis,st);
            st[v]=false;
            if(ch)
            return true;
        }
    }
    return false;
}

int Solution::solve(int A, vector<vector<int> > &B) {
    
    vector<int>adj[A+1];
    int vis[A+1]={0};
    int stack[200000];
    int n=B.size();
    for(int i=0;i<n;i++){
        adj[B[i][0]].push_back(B[i][1]);
    }
    
    for(int i=1;i<=A;i++){
        if(vis[i])
        continue;
        stack[i]=true;
        if(dfs(i,adj,vis,stack))
        return 1;
        stack[i]=false;
    }
    return false;
    
}
