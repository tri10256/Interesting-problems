vector<vector<int> > Solution::solve(vector<vector<int> > &A) {
    
    int n=A.size();
    int m=A[0].size();
    queue<pair<int,int>>q;
    set<pair<int,int>>visited;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(A[i][j])
            {
                q.push({i,j});
                visited.insert({i,j});
            }
        }
    }
    
    int x[]={-1,0,1,0};
    int y[]={0,1,0,-1};
    
    vector<vector<int>>ans(n,vector<int>(m,INT_MAX));
   
    while(!q.empty())
    {
        int ox=q.front().first;
        int oy=q.front().second;
        if(A[ox][oy])
        {
            ans[ox][oy]=0;
        }
        q.pop();
        for(int i=0;i<4;i++){
            int nx=ox+x[i];
            int ny=oy+y[i];
            if(nx>=0 && ny>=0 && nx<n && ny<m && A[nx][ny]==0)
            {ans[nx][ny]=min(ans[ox][oy]+1,ans[nx][ny]);
            if(!visited.count({nx,ny}))
            {
                q.push({nx,ny});
                visited.insert({nx,ny});
            }
            }
        }
        
    }
    return ans;
    
}
